{"version":3,"sources":["webpack:///./src/app/employees/add-employees/add-employees.component.html","webpack:///./src/app/employees/add-employees/add-employees.component.scss","webpack:///./src/app/employees/add-employees/add-employees.component.ts","webpack:///./src/app/employees/employees.module.ts","webpack:///./src/app/employees/employees.router.ts","webpack:///./src/app/employees/list-employees/list-employees.component.html","webpack:///./src/app/employees/list-employees/list-employees.component.scss","webpack:///./src/app/employees/list-employees/list-employees.component.ts","webpack:///./src/app/models/employee.ts"],"names":[],"mappings":"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","file":"employees-employees-module.js","sourcesContent":["module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n    <div fxFlex class=\\\"form-component-holder mat-elevation-z4\\\">\\n      <mat-toolbar class=\\\"form-header\\\">\\n        <h1 class=\\\"mat-headline center-align\\\"> Add Employee</h1>\\n      </mat-toolbar>\\n      <div [hidden]=\\\"submitted\\\" style=\\\"background-color: white;\\\">\\n  \\n        <form (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\" class=\\\"example-container\\\" >\\n          <mat-form-field class=\\\"example-container\\\">\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"employee.employeeName\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n          </mat-form-field>\\n  \\n          <div  style=\\\"color:red\\\" *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n  \\n            <div *ngIf=\\\"name.errors.required\\\">\\n              Name is required.\\n            </div>\\n            <div *ngIf=\\\"name.errors.minlength\\\">\\n              Name must be at least 4 characters long.\\n            </div>\\n          </div>\\n          <mat-form-field class=\\\"example-container\\\">\\n              <input matInput type=\\\"text\\\" [(ngModel)]=\\\"employee.mobileNumber\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n            </mat-form-field>\\n    \\n            <div  style=\\\"color:red\\\" *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n    \\n              <div *ngIf=\\\"name.errors.required\\\">\\n                Name is required.\\n              </div>\\n              <div *ngIf=\\\"name.errors.minlength\\\">\\n                Name must be at least 4 characters long.\\n              </div>\\n            </div>\\n            <mat-form-field class=\\\"example-container\\\">\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"employee.employeeEmail\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n              </mat-form-field>\\n      \\n              <div  style=\\\"color:red\\\" *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n      \\n                <div *ngIf=\\\"name.errors.required\\\">\\n                  Name is required.\\n                </div>\\n                <div *ngIf=\\\"name.errors.minlength\\\">\\n                  Name must be at least 4 characters long.\\n                </div>\\n              </div>\\n          <mat-form-field>\\n            <input matInput type=\\\"number\\\"  [(ngModel)]=\\\"employee.employeePassword\\\"  name=\\\"number\\\" #number=\\\"ngModel\\\" required minlength=\\\"10\\\">\\n          </mat-form-field>\\n          <div  style=\\\"color:red\\\" *ngIf=\\\"number.invalid && (number.dirty || number.touched)\\\"\\n          >\\n            <div *ngIf=\\\"number.errors.required\\\">\\n              number is required.\\n            </div>\\n            <div *ngIf=\\\"number.errors.minlength\\\">\\n              number must be at least 10 characters long.\\n            </div>\\n          </div>\\n          <mat-form-field>\\n              <input matInput type=\\\"number\\\"  [(ngModel)]=\\\"employee.employeePassword\\\"  name=\\\"number\\\" #number=\\\"ngModel\\\" required minlength=\\\"10\\\">\\n            </mat-form-field>\\n            <div  style=\\\"color:red\\\" *ngIf=\\\"number.invalid && (number.dirty || number.touched)\\\"\\n            >\\n              <div *ngIf=\\\"number.errors.required\\\">\\n                number is required.\\n              </div>\\n              <div *ngIf=\\\"number.errors.minlength\\\">\\n                number must be at least 10 characters long.\\n              </div>\\n            </div>\\n            <mat-form-field>\\n                <input matInput type=\\\"number\\\"  [(ngModel)]=\\\"employee.employeePassword\\\"  name=\\\"number\\\" #number=\\\"ngModel\\\" required minlength=\\\"10\\\">\\n              </mat-form-field>\\n              <div  style=\\\"color:red\\\" *ngIf=\\\"number.invalid && (number.dirty || number.touched)\\\"\\n              >\\n                <div *ngIf=\\\"number.errors.required\\\">\\n                  number is required.\\n                </div>\\n                <div *ngIf=\\\"number.errors.minlength\\\">\\n                  number must be at least 10 characters long.\\n                </div>\\n              </div>\\n            <mat-form-field>\\n               <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" >\\n               <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n             </mat-form-field>\\n\\n             <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Value binding\\\" [value]=\\\"employee.DOB\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker3></mat-datepicker>\\n              </mat-form-field>\\n              <!-- <mat-form-field>\\n                  <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Value binding\\\" [value]=\\\"employee.DOJ\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker3></mat-datepicker>\\n                </mat-form-field> -->\\n                <mat-radio-group>\\n                    <mat-radio-button value=\\\"1\\\">Option 1</mat-radio-button>\\n                    <mat-radio-button value=\\\"2\\\">Option 2</mat-radio-button>\\n                  </mat-radio-group>\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"mat-subheading-2 center-align button-style\\\">Submit</button>\\n        </form>\\n        \\n      </div>\\n  \\n      <!-- <div [hidden]=\\\"!submitted\\\" style=\\\"background-color: white;\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\n          <h2 class=\\\"mat-subheading-2 center-align\\\">You submitted the following:</h2>\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n            <div >Name</div>\\n            <div>{{ model.name }}</div>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n            <div>Number</div>\\n            <div>{{ model.number }}</div>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n            <div >Password</div>\\n            <div>{{ model.pwd}}</div>\\n          </div>\\n          <br>\\n          <button mat-raised-button  type=\\\"submit\\\" class=\\\"button-style\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n        </div>\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <h1>tfghuj</h1>\\n  </div>\"","module.exports = \".form-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.mat-form-field {\\n  padding-left: 10px; }\\n\\n.container {\\n  padding-left: 10px;\\n  padding-right: 10px; }\\n\\n.form-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.form-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\\n.button-style {\\n  background-color: #327ebd;\\n  font-weight: bold; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from 'src/app/models/employee';\nimport { CompanySignup } from 'src/app/models/companysignup';\n\n@Component({\n  selector: 'app-add-employees',\n  templateUrl: './add-employees.component.html',\n  styleUrls: ['./add-employees.component.scss']\n})\nexport class AddEmployeesComponent implements OnInit {\n  dob:Date;\n  doj:Date;\n  companysignup:CompanySignup;\n  employee:Employee=new Employee('','','','','','',this.dob,this.doj,'',this.companysignup);\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmployeesRouterModule } from './employees.router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {\r\n\t\t\tMatButtonModule,\r\n\t\t\tMatToolbarModule,\r\n\t\t\tMatCardModule,\r\n\t\t\tMatTabsModule,\r\n\t\t\tMatIconModule,\r\n\t\t\tMatNativeDateModule,\r\n\t\t\tMatDatepickerModule\r\n\t\t} from '@angular/material';\r\nimport { MatInputModule } from '@angular/material';\r\nimport {  ReactiveFormsModule } from '@angular/forms';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { AddEmployeesComponent } from './add-employees/add-employees.component';\r\nimport { ListEmployeesComponent } from './list-employees/list-employees.component';\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tEmployeesRouterModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatButtonModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatCardModule,\r\n\t\tMatTabsModule,\r\n\t\tMatIconModule,\r\n\t\t MatInputModule,\r\n\t\t ReactiveFormsModule,\r\n\t\t FormsModule,\r\n\t\t MatRadioModule,\r\n\t\t MatDatepickerModule,\r\n\t\t MatNativeDateModule\r\n\t],\r\n\tdeclarations: [AddEmployeesComponent, ListEmployeesComponent]\r\n})\r\nexport class EmployeeModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddEmployeesComponent } from './add-employees/add-employees.component';\r\nimport { ListEmployeesComponent } from './list-employees/list-employees.component';\r\n\r\n\r\nconst employeeroutes: Routes = [\r\n  \t{ path: 'addemployees', component: AddEmployeesComponent },\r\n  \t{ path: 'listemployees', component: ListEmployeesComponent },\r\n  \t\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(employeeroutes)\r\n  \t],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class EmployeesRouterModule {}","module.exports = \"<p>\\n  list-employees works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-employees',\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.scss']\n})\nexport class ListEmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CompanySignup } from \"./companysignup\";\r\n\r\nexport class Employee{\r\n    constructor( public employeeId:string,\r\n        public employeeName:string,\r\n        public mobileNumber:string,\r\n        public employeeEmail:string,\r\n        public employeePassword:string,\r\n        public address:string,\r\n        public DOB:Date,\r\n        public DOJ:Date,\r\n        public adminAccess:string,\r\n        public companySignUp:CompanySignup\r\n          ){}\r\n}"],"sourceRoot":""}