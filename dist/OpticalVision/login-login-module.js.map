{"version":3,"sources":["webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/models/login.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"background-color:#e0e0e0;\\\">\\r\\n\\r\\n\\t\\t<mat-card fxFlex=\\\"50\\\"  class=\\\"mat-elevation-z4 visionheight\\\">\\r\\n\\t\\t\\t\\t<mat-card-title style=\\\"text-align:center\\\" class=\\\"opticvision\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<img src=\\\"assets/camera.png\\\" width=\\\"50px\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<span>ptic Visions</span>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</mat-card-title>\\r\\n\\t\\t\\t\\t\\t<mat-card-content class=\\\"opticvision_1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab-group >\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"login\\\" (click)=\\\"admin()\\\">Admin</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"login\\\" (click)=\\\"employee()\\\">Employee</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"Admin\\\"> \\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"heading_1\\\">ADMIN BLOCK</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<form class=\\\"example-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" #userForm=\\\"ngForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email\\\" #adminloginemail=\\\"ngModel\\\"  [(ngModel)]=\\\"adminlogin.email\\\"  name =\\\"email\\\" pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\" required >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"adminloginemail.touched && !adminloginemail.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error  *ngIf=\\\"adminloginemail.errors.required\\\">Email is Required</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"adminloginemail.errors.pattern\\\">Not a Valid Email</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"password\\\" #adminloginpass=\\\"ngModel\\\" [(ngModel)]=\\\"adminlogin.password\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <mat-icon class=\\\"cursor\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-error class=\\\"error-message\\\" *ngIf=\\\"adminloginpass.touched && !adminloginpass.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"adminloginpass.errors.required\\\">Password is Required</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start none\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlexOffset=\\\"50\\\" fxFlex=\\\"50\\\" class=\\\"forget\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 style=\\\"cursor:pointer\\\">Forget Password?</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"login\\\" (click)=\\\"loginAdmin($event)\\\" [disabled]=\\\"userForm.invalid\\\">SIGN IN</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 style=\\\" color: #3f6aa7;\\\">Or Sign Up For Admin</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center stretch\\\" class=\\\"example-container\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"login\\\" [disabled]=\\\"userForm.valid\\\" (click)=\\\"signup()\\\">Sign Up</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"Employee\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"heading_1\\\">EMPLOYEE BLOCK</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form class=\\\"example-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" #userempForm=\\\"ngForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email\\\" #employeeloginemail=\\\"ngModel\\\"  [(ngModel)]=\\\"employeelogin.email\\\"  name =\\\"email\\\" pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\" required >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"employeeloginemail.touched && !employeeloginemail.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"employeeloginemail.errors.required\\\">Email is Required</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"employeeloginemail.errors.pattern\\\">Not a Valid Email</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"password\\\" #employeeloginpass=\\\"ngModel\\\" [(ngModel)]=\\\"employeelogin.password\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon class=\\\"cursor\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-error class=\\\"error-message\\\" *ngIf=\\\"employeeloginpass.touched && !employeeloginpass.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"employeeloginpass.errors.required\\\">Password is Required</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start none\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\" class=\\\"forget\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 style=\\\"cursor:pointer\\\">Forget Password?</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"login\\\" (click)=\\\"loginEmployee($event)\\\" [disabled]=\\\"userempForm.invalid\\\">SIGN IN</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t </mat-tab>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-tab-group>\\r\\n\\t\\t\\t\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t</mat-card>\\r\\n</div>\\r\\n<!-- <div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\" style=\\\"background-color:whitesmoke\\\">\\r\\n\\t\\r\\n\\t<mat-card>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<mat-card-title>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"opticvision\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/camera.png\\\" width=\\\"30px\\\"> \\r\\n\\t\\t\\t\\t\\t\\t<span>ptic Visions</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</mat-card-title>\\r\\n\\t\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t\\t\\t<form class=\\\"example-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" (submit)=\\\"loginUser($event)\\\" #userForm=\\\"ngForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"form_bottom\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email\\\" #email=\\\"ngModel\\\"  [ngModel]=\\\"emailname\\\"  name =\\\"email\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\\\"color:red\\\" *ngIf=\\\"email.touched && !email.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"email.errors.required\\\">Email is Required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"form_bottom\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" #password1=\\\"ngModel\\\" [ngModel]=\\\"passwordname\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span style=\\\"color:red\\\" *ngIf=\\\"password1.touched && !password1.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"password1.errors.required\\\">Password is Required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"login\\\" [disabled]=\\\"userForm.invalid\\\">Log In</button>\\r\\n\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align:right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3><a  class=\\\"redirect\\\" [routerLink]=\\\"['/register']\\\">Signup For Admin</a></h3>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t</mat-card>\\r\\n\\t\\r\\n</div>\\r\\n\\t\\t -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div fxLayout=\\\"row\\\" fxFlexFill fxLayoutAlign=\\\"center\\\" style=\\\"background-color:#677069;\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\" mat-elevation-z4\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<mat-card class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>SIGN IN</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-card-content>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" (submit)=\\\"loginUser($event)\\\" #userForm=\\\"ngForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter your email\\\" #email=\\\"ngModel\\\"  [ngModel]=\\\"emailname\\\"  name =\\\"email\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\\\"color:red\\\" *ngIf=\\\"email.touched && !email.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"email.errors.required\\\">Email is Required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter your password\\\" type=\\\"password\\\" name=\\\"password\\\" #password1=\\\"ngModel\\\" [ngModel]=\\\"passwordname\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <span style=\\\"color:red\\\" *ngIf=\\\"password1.touched && !password1.valid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"password1.errors.required\\\">Password is Required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\">log in</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-card-content>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"redirect\\\" [routerLink]=\\\"['/register']\\\">Register an account</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t        \\r\\n\\r\\n\\t</div>\\r\\n\\r\\n</div> -->\"","module.exports = \".redirect {\\n  color: #607d8b; }\\n\\n.login {\\n  font-size: 20px;\\n  font-weight: bold;\\n  color: white;\\n  font-family: -webkit-body; }\\n\\n.forget {\\n  color: dodgerblue;\\n  text-align: right; }\\n\\n.opticvision {\\n  font-size: 60px;\\n  font-family: -webkit-body; }\\n\\n.opticvision span {\\n  color: dodgerblue; }\\n\\n.form_bottom {\\n  margin: 20px 0px; }\\n\\n.visionheight {\\n  background-color: #ffffff; }\\n\\n@media only screen and (min-width: 1281px) {\\n  .opticvision_1 {\\n    font-size: 18px;\\n    font-family: -webkit-body; } }\\n\\n@media only screen and (min-width: 768px) and (max-width: 1024px) {\\n  .opticvision {\\n    font-size: 30px;\\n    font-family: -webkit-body; } }\\n\\n.heading_1 {\\n  text-align: center;\\n  color: #ffffff;\\n  background-color: dodgerblue; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {  AdminLogin,EmployeeLogin } from '../models/login';\r\nimport { LoginService } from '../services/login.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  hide = true;\r\n  emailname:string;\r\n  adminlogin:AdminLogin=new AdminLogin('','');\r\n  employeelogin:EmployeeLogin=new EmployeeLogin('','');\r\nadminhide:boolean=true;\r\n  constructor(private router: Router,private loginservice:LoginService,private snackBar:MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n\r\n  admin(){\r\n  this.adminhide=true;\r\n  }\r\n  employee(){\r\nthis.adminhide=false;\r\n  }\r\n  loginAdmin() {\r\n    this.loginservice.adminLogin(this.adminlogin)\r\n      .subscribe(\r\n       (res:any)=>{\r\n         localStorage.setItem('token',res.token);\r\n         this.router.navigate(['/optical/dashboard']);\r\n         \r\n       },\r\n       err =>{\r\n         if(err instanceof HttpErrorResponse){\r\n           if(err.status === 401){\r\n               this.snackBar.open(err.error,'Alert' ,{\r\n                 duration:3000\r\n              });\r\n           }\r\n         }\r\n        \r\n       }\r\n      );\r\n  }\r\n  loginEmployee() {\r\n    this.loginservice.adminLogin(this.adminlogin)\r\n    .subscribe(\r\n     (res:any)=>{\r\n       localStorage.setItem('token',res.token);\r\n       this.router.navigate(['/optical/dashboard']);\r\n       \r\n     },\r\n     err =>{\r\n       if(err instanceof HttpErrorResponse){\r\n         if(err.status === 401){\r\n             this.snackBar.open(err.error,'Alert' ,{\r\n               duration:3000\r\n            });\r\n         }\r\n       }\r\n      \r\n     }\r\n    );\r\n}\r\n  signup(){\r\n    this.router.navigate(['/register']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule, Routes } from '@angular/router'; \r\nimport { \r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatToolbarModule,MatSnackBarModule\r\n } from '@angular/material';\r\n import {MatTabsModule} from '@angular/material/tabs';\r\n import {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptorService } from '../guards/token-interceptor.service';\r\nconst appRoutes: Routes = [\r\n    { path: '', component: LoginComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatButtonToggleModule,\r\n    FlexLayoutModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    ReactiveFormsModule,\r\n    MatCheckboxModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    RouterModule.forChild(appRoutes),\r\n  ],\r\n  declarations: [LoginComponent],\r\n  providers:[]\r\n})\r\nexport class LoginModule { }\r\n","export class AdminLogin{\r\n    constructor(public email:string,public password:string){}\r\n}\r\nexport class EmployeeLogin{\r\n    constructor(public email:string,public password:string){}\r\n}"],"sourceRoot":""}